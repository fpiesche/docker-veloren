branches:
  main

matrix:
  BUILDTYPE:
  # - "release"
  - "debug"

pipeline:
  build-tags:
    image: woodpeckerci/plugin-docker-buildx
    pull: true

    commands:
    - |
      cd veloren
      git fetch --tags
      echo "export VELOREN_VERSION=$(git for-each-ref refs/tags --sort=-taggerdate --format='%(refname)' --count=2 | grep -ve 'nightly' | sed 's:refs/tags/::')" >> .env
      echo "export VELOREN_COMMIT=$(git rev-parse --short $${VELOREN_VERSION})" >> .env

      # Set up build mode arguments and "latest" image tag for Docker
      if [ ${BUILDTYPE} == "release" ]; then
        echo "export VELOREN_BUILD_ARGS=--release" >> .env
        echo "export VELOREN_IMAGE_TAG=latest" >> .env
      else
        echo "export VELOREN_BUILD_ARGS=''" >> .env
        echo "export VELOREN_IMAGE_TAG='debug-latest'" >> .env
      fi

  build-images:
    image: woodpeckerci/plugin-docker-buildx
    pull: true
    environment:
      - PLATFORMS="linux/arm64/v8,linux/amd64"
      - IMAGE_NAME="veloren-server"
    secrets:
      - DOCKERHUB_USERNAME
      - DOCKERHUB_TOKEN
      - GITHUB_USERNAME
      - GITHUB_TOKEN
    commands:
    - |
      source .env

      for tag in $(curl -s https://registry.hub.docker.com/v1/repositories/$DOCKERHUB_USERNAME/$IMAGE_NAME/tags | jq -r ".[].name"); do
        if [[ "$tag" == "$VELOREN_VERSION" ]]; then
          echo "Release $tag has already been built."
          exit
        fi
      done

      git checkout $VELOREN_VERSION
      # we always want to build the server
      docker buildx create --use
      docker buildx build --build-arg VELOREN_VERSION=$VELOREN_VERSION --build-arg BUILD_ARGS=$VELOREN_BUILD_ARGS \
        --output type=local,dest=./artifacts \
        --platforms $PLATFORMS \
        --target exporter

      if [ ${CI_COMMIT_SOURCE_BRANCH} == 'main' ]; then
        # Only when we're looking at a push to main do we actually want to publish artifacts and images
        # TODO: log in to registries

        docker buildx build --build-arg VELOREN_VERSION=$VELOREN_VERSION --build-arg BUILD_ARGS=$VELOREN_BUILD_ARGS \
          --output type=local,dest=./artifacts \
          --platforms $PLATFORMS \
          --target server \
          --push \
          -t $DOCKERHUB_USERNAME/$IMAGE_NAME:$BUILDTYPE-$VELOREN_VERSION \
          -t $DOCKERHUB_USERNAME/$IMAGE_NAME:$VELOREN_IMAGE_TAG \
          -t ghcr.io/$GITHUB_USERNAME/$IMAGE_NAME:$BUILDTYPE-$VELOREN_VERSION \
          -t ghcr.io/$GITHUB_USERNAME/$IMAGE_NAME:$VELOREN_IMAGE_TAG

        # TODO: publish artifacts to github release
      fi
