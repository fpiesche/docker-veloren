name: Nightly

on:
  # Allow manual runs.
  workflow_dispatch:
  # Also run on updates to this repo.
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

  # Run on a daily schedule at 10:30am to update the nightly build.
  schedule:
    - cron: '30 10 * * *'

env:
  PLATFORMS: linux/arm64/v8,linux/amd64
  PUSH_IMAGE: ${{ github.ref == 'refs/heads/main' }}
  IMAGE_NAME: "veloren-server"

jobs:

  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: "Setup QEMU"
        uses: docker/setup-qemu-action@v2

      - name: "Setup Docker BuildKit"
        uses: docker/setup-buildx-action@v2

      - name: Generate timestamp
        run: |
          DATESTAMP=$(date --date="-1 days" +%Y-%m-%d)
          echo "DATESTAMP=${DATESTAMP}" >> $GITHUB_ENV

      - name: Generate Docker image metadata
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,v${{ env.DATESTAMP }}
            type=raw,nightly

      - name: "Login to DockerHub"
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Login to GitHub Container Registry"
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: "Build and push ${{ env.IMAGE_NAME }} Docker image"
        uses: docker/build-push-action@v3
        with:
          file: build-server.Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
