branches:
  main

matrix:
  BUILDTYPE:
  # - "release"
  - "debug"

pipeline:
  build-env:
    when:
      event: tag

    image: alpine
    commands:
    - |
      apk add --no-cache git jq curl
      cd veloren
      git fetch --tags

      export VELOREN_VERSION=$(git for-each-ref refs/tags --sort=-taggerdate --format='%(refname)' --count=2 | grep -ve 'nightly' | sed 's:refs/tags/::')
      echo "export VELOREN_VERSION=$VELOREN_VERSION" >> .build_env
      echo "export VELOREN_COMMIT=$(git rev-parse --short $VELOREN_VERSION)" >> .build_env

      # Set up build mode arguments and "latest" image tag for Docker
      if [ ${BUILDTYPE} == "release" ]; then
        echo "export VELOREN_BUILD_ARGS=--release" >> .build_env
        echo "export VELOREN_IMAGE_TAG=latest" >> .build_env
      else
        echo "export VELOREN_BUILD_ARGS=''" >> .build_env
        echo "export VELOREN_IMAGE_TAG='debug-latest'" >> .build_env
      fi

      # Check whether we actually need to build this release
      for tag in $(curl -s https://registry.hub.docker.com/v1/repositories/$DOCKERHUB_USERNAME/$IMAGE_NAME/tags | jq -r ".[].name"); do
          if [[ "$tag" == "$VELOREN_VERSION" ]]; then
              echo "Release $tag has already been built."
              echo "export BUILD_RELEASE=false" >> .build_env
              exit
          fi
      done

      # If we do, make sure the submodule is checked out to the tag to build
      git checkout $VELOREN_VERSION

  build-local:
    when:
      event: tag

    group: build-images
    image: woodpeckerci/plugin-docker-buildx
    secrets:
      - docker_password
    settings:
      dry_run: true
      repo: florianpiesche/veloren-server
      dockerfile: Dockerfile
      args:
        - "VELOREN_VERSION=$CI_COMMIT_TAG"
      platforms: linux/arm64/v8,linux/amd64
      tag:
        - $CI_COMMIT_TAG
        - $BUILDTYPE-latest
      target: server
