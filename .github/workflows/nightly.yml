name: Nightly

on:
  # Allow manual runs.
  workflow_dispatch:
  # Also run on updates to this repo.
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  PLATFORMS: linux/arm64/v8,linux/amd64
  PUSH_IMAGE: ${{ github.ref == 'refs/heads/main' }}
  IMAGE_NAME: "veloren-server"

jobs:

  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Not doing Release builds because they straight up murder Github's build agents
        # BUILDTYPE: [ "debug", "release" ]
        BUILDTYPE: [ "debug" ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: "[SETUP] Setup QEMU"
        uses: docker/setup-qemu-action@v1

      - name: "[SETUP] Setup Docker BuildKit"
        uses: docker/setup-buildx-action@v1

      - name: "[SETUP] Login to DockerHub"
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "[SETUP] Login to GitHub Container Registry"
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: "[SETUP] Get Docker build arguments (date stamp, current Veloren commit, build type)"
        run: |
          echo VELOREN_COMMIT=$(git rev-parse --short @:./veloren) >> $GITHUB_ENV
          echo DATESTAMP=$(date +%Y.%m.%d) >> $GITHUB_ENV
          if [ ${{ matrix.BUILDTYPE}} == "release" ]; then
            echo VELOREN_BUILD_ARGS=--release >> $GITHUB_ENV
          else
            echo VELOREN_BUILD_ARGS="" >> $GITHUB_ENV
          fi

      - name: "[BUILD] Build Veloren ${{ matrix.BUILDTYPE }}-${{ env.DATESTAMP }} server"
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          build-args: |
            VELOREN_COMMIT=${{ env.VELOREN_COMMIT }}
            VELOREN_VERSION=${{ env.DATESTAMP }}
            BUILD_ARGS=${{ env.VELOREN_BUILD_ARGS }}
          platforms: ${{ env.PLATFORMS }}
          push: false
          outputs: type=local,dest=./artifacts
          target: exporter

      - name: "[BUILD] Build and push ${{ env.IMAGE_NAME }} Docker image"
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          build-args: |
            VELOREN_COMMIT=${{ env.VELOREN_COMMIT }}
            VELOREN_VERSION=${{ env.DATESTAMP }}
            BUILD_ARGS=${{ env.VELOREN_BUILD_ARGS }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-nightly
            ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-nightly-${{ env.DATESTAMP }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-nightly
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-nightly-${{ env.DATESTAMP }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ env.PUSH_IMAGE }}
          target: server

      - name: "[RELEASE] Tarball build artifacts"
        run: |
          for artifact in ${{ github.workspace }}/artifacts/*; do
            platform=$(basename $artifact)
            tar czf ${{ github.workspace }}/artifacts/veloren-server-${{ matrix.BUILDTYPE }}-nightly-${{ env.DATESTAMP }}.$platform.tar.gz -C $artifact *
          done

      - name: "[RELEASE] Publish amd64 artifact"
        uses: actions/upload-artifact@v3
        with:
          name: veloren-server-${{ matrix.BUILDTYPE }}-nightly-${{ env.DATESTAMP }} (amd64)
          path: ${{ github.workspace }}/artifacts/veloren-server-${{ matrix.BUILDTYPE }}-nightly-${{ env.DATESTAMP }}.linux_amd64.tar.gz

      - name: "[RELEASE] Publish arm64 artifact"
        uses: actions/upload-artifact@v3
        with:
          name: veloren-server-${{ matrix.BUILDTYPE }}-${{ env.VELOREN_VERSION }} (arm64)
          path: ${{ github.workspace }}/artifacts/veloren-server-${{ matrix.BUILDTYPE }}-nightly-${{ env.DATESTAMP }}.linux_arm64.tar.gz
