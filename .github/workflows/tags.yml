name: Tags

on:
  # Allow manual runs.
  workflow_dispatch:
  # Also run on updates to this repo.
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  PLATFORMS: linux/arm64/v8,linux/amd64
  PUSH_IMAGE: ${{ github.ref == 'refs/heads/main' }}
  IMAGE_NAME: "veloren-server"
  BUILD_RELEASE: true

jobs:

  build-images:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Not doing Release builds because they straight up murder Github's build agents
        # BUILDTYPE: [ "debug", "release" ]
        BUILDTYPE: [ "debug" ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Get Docker build arguments and check out latest non-nightly Veloren tag
        run: |
          # Get latest non-nightly tag in the Veloren repo and check it out
          cd veloren
          git fetch --tags
          VELOREN_VERSION=$(git for-each-ref refs/tags --sort=-taggerdate --format='%(refname)' --count=2 | grep -ve "nightly" | sed "s:refs/tags/::")
          echo "VELOREN_COMMIT=$(git rev-parse --short ${VELOREN_VERSION})" >> $GITHUB_ENV
          echo "Latest tag is ${VELOREN_VERSION}."
          echo "VELOREN_VERSION=${VELOREN_VERSION}" >> $GITHUB_ENV
          git checkout ${VELOREN_VERSION}

          # Set up build mode arguments and "latest" image tag for Docker
          if [ ${{ matrix.BUILDTYPE}} == "release" ]; then
            echo VELOREN_BUILD_ARGS=--release >> $GITHUB_ENV
            echo VELOREN_IMAGE_TAG=latest >> $GITHUB_ENV
          else
            echo VELOREN_BUILD_ARGS=--debug >> $GITHUB_ENV
            echo VELOREN_IMAGE_TAG=debug-latest >> $GITHUB_ENV
          fi


      - name: Check whether ${{ env.VELOREN_VERSION }} needs building
        if: ${{ env.PUSH_IMAGE == 'true' }}
        run: |
          # Check whether there already is a Docker image for the current tag
          SERVER_TAGS=$(curl -s https://registry.hub.docker.com/v1/repositories/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}/tags | jq -r ".[].name") || SERVER_TAGS="none"
          for tag in ${SERVER_TAGS[@]}; do
            if [[ "$tag" == "${VELOREN_VERSION}" ]]; then
              echo "Release ${tag} has already been built."
              echo "BUILD_RELEASE=false" >> $GITHUB_ENV
              exit
            fi
          done

      - name: Docker Setup QEMU
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/setup-qemu-action@v1

      - name: Docker Setup Buildx
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Veloren ${{ matrix.BUILDTYPE }}-${{ env.VELOREN_VERSION }} server
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/build-push-action@v2
        with:
          build-args: |
            VELOREN_VERSION=${{ env.VELOREN_VERSION }}
            BUILD_ARGS=${{ env.VELOREN_BUILD_ARGS }}
          # outputs: type=local,dest=./artifacts
          outputs: type=tar,dest=${{ github.workspace }}/artifacts/veloren-server-${{ matrix.BUILDTYPE }}-${{ env.VELOREN_VERSION }}.tar
          platforms: ${{ env.PLATFORMS }}
          push: false
          target: exporter

      - name: Publish server build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: veloren-server-${{ matrix.BUILDTYPE }}-${{ env.VELOREN_VERSION }}
          path: ${{ github.workspace }}/artifacts

      - name: Build and push ${{ env.IMAGE_NAME }}:${{ env.VELOREN_VERSION }} Docker image
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/build-push-action@v2
        with:
          build-args: |
            VELOREN_VERSION=${{ env.VELOREN_VERSION }}
            BUILD_ARGS=${{ env.VELOREN_BUILD_ARGS }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-${{ env.VELOREN_VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-${{ env.VELOREN_IMAGE_TAG }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-${{ env.VELOREN_VERSION }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-${{ env.VELOREN_IMAGE_TAG }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ env.PUSH_IMAGE }}
          target: server
