branches:
  main

pipeline:
  build-tags:
    image: woodpeckerci/plugin-docker-buildx
    environment:
      - PLATFORMS="linux/arm64/v8,linux/amd64"
      - IMAGE_NAME="veloren-server"
      - BUILD_RELEASE="true"
      - BUILDTYPE="release"

    commands:
    - |
      cd veloren
      git fetch --tags
      export VELOREN_VERSION=$(git for-each-ref refs/tags --sort=-taggerdate --format='%(refname)' --count=2 | grep -ve "nightly" | sed "s:refs/tags/::")
      export VELOREN_COMMIT="$(git rev-parse --short ${VELOREN_VERSION})"
      echo "Latest tag is ${VELOREN_VERSION}."
      git checkout ${VELOREN_VERSION}

      # Set up build mode arguments and "latest" image tag for Docker
      if [ ${BUILDTYPE} == "release" ]; then
        export VELOREN_BUILD_ARGS="--release"
        export VELOREN_IMAGE_TAG="latest"
      else
        export VELOREN_BUILD_ARGS=""
        export VELOREN_IMAGE_TAG="debug-latest"
      fi

      SERVER_TAGS=$(curl -s https://registry.hub.docker.com/v1/repositories/${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE_NAME}/tags | jq -r ".[].name") || SERVER_TAGS="none"
      for tag in ${SERVER_TAGS[@]}; do
        if [[ "$tag" == "${VELOREN_VERSION}" ]]; then
          echo "Release ${tag} has already been built."
          export BUILD_RELEASE="false"
          exit
        fi
      done

      # we always want to build the server
      docker buildx create --use
      docker buildx build --build-arg VELOREN_VERSION=${VELOREN_VERSION} --build-arg BUILD_ARGS=${VELOREN_BUILD_ARGS} \
        --output type=local,dest=./artifacts \
        --platforms ${PLATFORMS} \
        --target exporter

      if [ ${CI_COMMIT_SOURCE_BRANCH} == 'main' ]; then
        # Only when we're looking at a push to main do we actually want to publish artifacts and images
        # TODO: log in to registries

        docker buildx build --build-arg VELOREN_VERSION=${VELOREN_VERSION} --build-arg BUILD_ARGS=${VELOREN_BUILD_ARGS} \
          --output type=local,dest=./artifacts \
          --platforms ${PLATFORMS} \
          --target server \
          --push \
          -t ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-${{ env.VELOREN_VERSION }} \
          -t ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-${{ env.VELOREN_IMAGE_TAG }} \
          -t ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-${{ env.VELOREN_VERSION }} \
          -t ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ matrix.BUILDTYPE }}-${{ env.VELOREN_IMAGE_TAG }}

        # TODO: publish artifacts to github release
      fi
